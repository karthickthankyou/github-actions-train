# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run validate
      - name: Cypress run web
        run: npm run cypress:run
      - name: Cypress run mobile
        run: npm run cypress:run:mobile
      - run: npm run test
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload test coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
        # uses: cypress-io/github-action@v2
        # with:
        #   record: true
        # env:
        #   # pass the Dashboard record key as an environment variable
        #   CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        #   # pass GitHub token to allow accurately detecting a build vs a re-run build
        #   GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}
      # Chromatic part
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        # Chromatic GitHub Action options replaced into main.yml. Retrying.
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
      - name: build
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npm run build
        env:
          CI: true

      - name: Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1
          AWS_DEFAULT_OUTPUT: json
        run: aws amplify start-job --app-id ${{secrets.APP_ID}} --branch-name main --job-type RELEASE

      - name: Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{secrets.CUSTOM_TOKEN}}

      - name: Upload codecov
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}

      - name: Slack Notification (Failed)
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Slack Notification
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
